package com.calc;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Locale;

public class calculator extends JFrame {
    private JTextField textField1;
    private JPanel panel1;
    private JButton button7;
    private JButton button8;
    private JButton button9;
    private JButton button10;
    private JButton button4;
    private JButton button1;
    private JButton button5;
    private JButton button6;
    private JButton button2;
    private JButton button3;
    private JButton button11;
    private JButton button12;
    private JButton button0;
    private JButton button13;
    private JButton button14;
    private JTextField textField2;
    private JButton сButton;
    private JButton button15;

    private String decimalStr;
    private float firstPart = -1;
    private float secondPart = -1;
    private String actionCode;

    public static void main(String[] args) throws UnsupportedLookAndFeelException, ClassNotFoundException, InstantiationException, IllegalAccessException {
        new calculator();
    }

    public calculator() throws UnsupportedLookAndFeelException, ClassNotFoundException, InstantiationException, IllegalAccessException {
        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        setContentPane(panel1);
        setVisible(true);
        setTitle("Java Calculator v1.4");
        setSize(350, 400);
        decimalStr = "";
        ActionListener insert = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String btnCode = e.getActionCommand();
                decimalStr += btnCode;
                textField1.setText(textField1.getText() + btnCode);
            }
        };
        button7.addActionListener(insert);
        button8.addActionListener(insert);
        button9.addActionListener(insert);
        button4.addActionListener(insert);
        button1.addActionListener(insert);
        button5.addActionListener(insert);
        button6.addActionListener(insert);
        button2.addActionListener(insert);
        button3.addActionListener(insert);
        button0.addActionListener(insert);
        button15.addActionListener(insert);

        ActionListener action = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                actionCode = e.getActionCommand();
                if (actionCode.equals(".")) {
                    decimalStr += actionCode;
                } else {
                    firstPart = Float.parseFloat(decimalStr);
                    decimalStr = "";
                }
                textField1.setText(textField1.getText() + " " + actionCode + " ");
            }
        };
        button10.addActionListener(action);
        button11.addActionListener(action);
        button12.addActionListener(action);
        button13.addActionListener(action);

        button14.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                float answer = 0;
                secondPart = Float.parseFloat(decimalStr);
                if (firstPart != -1 && secondPart != -1) {
                    decimalStr = "";
                    switch (actionCode) {
                        case "+":
                            answer = firstPart + secondPart;
                            break;
                        case "-":
                            answer = firstPart - secondPart;
                            break;
                        case "/":
                            answer = firstPart / secondPart;
                            break;
                        case "*":
                            answer = firstPart * secondPart;
                            break;
                    }
                } else {
                    answer = Float.parseFloat(decimalStr);
                }
                textField2.setText(textField1.getText());
                textField1.setText("" + answer);
                decimalStr = "" + answer;
            }
        });
        сButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                decimalStr = "";
                textField1.setText("");
                textField2.setText("");
                firstPart = -1;
                secondPart = -1;
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        textField1 = new JTextField();
        textField1.setAutoscrolls(false);
        Font textField1Font = this.$$$getFont$$$("JetBrains Mono", -1, 20, textField1.getFont());
        if (textField1Font != null) textField1.setFont(textField1Font);
        textField1.setHorizontalAlignment(4);
        panel1.add(textField1, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 45), null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(4, 4, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel2, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        button7 = new JButton();
        Font button7Font = this.$$$getFont$$$("JetBrains Mono", -1, 20, button7.getFont());
        if (button7Font != null) button7.setFont(button7Font);
        button7.setText("7");
        panel2.add(button7, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button8 = new JButton();
        Font button8Font = this.$$$getFont$$$("JetBrains Mono", -1, 20, button8.getFont());
        if (button8Font != null) button8.setFont(button8Font);
        button8.setText("8");
        panel2.add(button8, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button9 = new JButton();
        Font button9Font = this.$$$getFont$$$("JetBrains Mono", -1, 20, button9.getFont());
        if (button9Font != null) button9.setFont(button9Font);
        button9.setText("9");
        panel2.add(button9, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button10 = new JButton();
        Font button10Font = this.$$$getFont$$$("JetBrains Mono", -1, 20, button10.getFont());
        if (button10Font != null) button10.setFont(button10Font);
        button10.setText("+");
        panel2.add(button10, new com.intellij.uiDesigner.core.GridConstraints(0, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button4 = new JButton();
        Font button4Font = this.$$$getFont$$$("JetBrains Mono", -1, 20, button4.getFont());
        if (button4Font != null) button4.setFont(button4Font);
        button4.setText("4");
        panel2.add(button4, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button1 = new JButton();
        Font button1Font = this.$$$getFont$$$("JetBrains Mono", -1, 20, button1.getFont());
        if (button1Font != null) button1.setFont(button1Font);
        button1.setText("1");
        panel2.add(button1, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button5 = new JButton();
        Font button5Font = this.$$$getFont$$$("JetBrains Mono", -1, 20, button5.getFont());
        if (button5Font != null) button5.setFont(button5Font);
        button5.setText("5");
        panel2.add(button5, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button6 = new JButton();
        Font button6Font = this.$$$getFont$$$("JetBrains Mono", -1, 20, button6.getFont());
        if (button6Font != null) button6.setFont(button6Font);
        button6.setText("6");
        panel2.add(button6, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button2 = new JButton();
        Font button2Font = this.$$$getFont$$$("JetBrains Mono", -1, 20, button2.getFont());
        if (button2Font != null) button2.setFont(button2Font);
        button2.setText("2");
        panel2.add(button2, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button3 = new JButton();
        Font button3Font = this.$$$getFont$$$("JetBrains Mono", -1, 20, button3.getFont());
        if (button3Font != null) button3.setFont(button3Font);
        button3.setText("3");
        panel2.add(button3, new com.intellij.uiDesigner.core.GridConstraints(2, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button11 = new JButton();
        Font button11Font = this.$$$getFont$$$("JetBrains Mono", -1, 20, button11.getFont());
        if (button11Font != null) button11.setFont(button11Font);
        button11.setText("-");
        panel2.add(button11, new com.intellij.uiDesigner.core.GridConstraints(1, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button12 = new JButton();
        Font button12Font = this.$$$getFont$$$("JetBrains Mono", -1, 20, button12.getFont());
        if (button12Font != null) button12.setFont(button12Font);
        button12.setText("*");
        panel2.add(button12, new com.intellij.uiDesigner.core.GridConstraints(2, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button0 = new JButton();
        Font button0Font = this.$$$getFont$$$("JetBrains Mono", -1, 20, button0.getFont());
        if (button0Font != null) button0.setFont(button0Font);
        button0.setText("0");
        panel2.add(button0, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button13 = new JButton();
        Font button13Font = this.$$$getFont$$$("JetBrains Mono", -1, 20, button13.getFont());
        if (button13Font != null) button13.setFont(button13Font);
        button13.setText("/");
        panel2.add(button13, new com.intellij.uiDesigner.core.GridConstraints(3, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button14 = new JButton();
        Font button14Font = this.$$$getFont$$$("JetBrains Mono", -1, 20, button14.getFont());
        if (button14Font != null) button14.setFont(button14Font);
        button14.setText("=");
        panel2.add(button14, new com.intellij.uiDesigner.core.GridConstraints(3, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button15 = new JButton();
        button15.setText(".");
        panel2.add(button15, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textField2 = new JTextField();
        textField2.setAutoscrolls(false);
        textField2.setEditable(false);
        textField2.setEnabled(true);
        Font textField2Font = this.$$$getFont$$$("JetBrains Mono", Font.ITALIC, 18, textField2.getFont());
        if (textField2Font != null) textField2.setFont(textField2Font);
        textField2.setHorizontalAlignment(0);
        panel1.add(textField2, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 45), null, 0, false));
        сButton = new JButton();
        Font сButtonFont = this.$$$getFont$$$("JetBrains Mono", -1, 20, сButton.getFont());
        if (сButtonFont != null) сButton.setFont(сButtonFont);
        сButton.setHorizontalAlignment(0);
        сButton.setText("С");
        panel1.add(сButton, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(76, 33), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
